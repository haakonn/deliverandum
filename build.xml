<?xml version="1.0" encoding="utf-8"?>
<project name="deliverandum" default="deploy-hard">

    <property name="project-name" value="deliverandum"/>

    <!-- Load Tomcat properties -->
    <property name="props" location="props"/>
    <property file="${props}/tomcat.properties"/>

    <!-- Basic folder definitions -->
    <property name="src" location="src"/>
    <property name="dist" location="dist"/>
    <property name="classes" location="classes"/>
    <property name="web" location="web"/>
    <property name="lib" location="${web}/WEB-INF/lib"/>
    <property name="javadoc" location="javadoc"/>
    <property name="web-root" location="${webroot}"/>

    <!-- Common classpath for all targets -->
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="${classes}"/>
        <fileset dir="${web}">
            <include name="**/*.xml"/>
            <include name="**/*.properties"/>
        </fileset>
    </path>

    <!-- Clean project -->
    <target name="clean">
        <delete dir="${dist}"/>
        <delete dir="${classes}"/>
        <delete dir="${javadoc}"/>
    </target>

    <target name="_jvmcheck">
        <!-- Java 1.6 or greater must be used. -->
        <condition property="jvm.ok">
            <not>
                <or>
                    <equals arg1="${ant.java.version}" arg2="1.1"/>
                    <equals arg1="${ant.java.version}" arg2="1.2"/>
                    <equals arg1="${ant.java.version}" arg2="1.3"/>
                    <equals arg1="${ant.java.version}" arg2="1.4"/>
                    <equals arg1="${ant.java.version}" arg2="1.5"/>
                </or>
            </not>
        </condition>
        <fail message="Wrong JVM version: ${ant.java.version}" unless="jvm.ok"/>
    </target>

    <!-- Prepares for new build-->
    <target name="init">
        <mkdir dir="${dist}"/>
        <mkdir dir="${classes}"/>
    </target>

    <!-- Compiles the src for the project -->
    <target name="compile-src" depends="init, _jvmcheck">
        <javac srcdir="${src}"
               destdir="${classes}"
               listfiles="on"
               debug="on"
               encoding="utf8"
               classpathref="classpath"
                />
    	<copy todir="${classes}/no/uib/ii/deliverandum" preservelastmodified="true">
    		<fileset dir="${src}/no/uib/ii/deliverandum" includes="*.vm" />
    	</copy>
    </target>

    <!-- Compile all src and test files -->
    <target name="compile" depends="compile-src"/>

    <target name="makeWar">
        <war destfile="deliverandum.war" webxml="dist/WEB-INF/web.xml">
            <fileset dir="dist">
            </fileset>
        </war>
    </target>

    <!-- Deploy directly to server (preserve unchanged files) -->
    <target name="deploy" depends="compile">

        <!-- Copy web-folder contents to the deployment folder-->
        <copy todir="${web-root}" preservelastmodified="true">
            <fileset dir="${web}"/>
        </copy>

        <!-- Copy all library files -->
        <copy todir="${web-root}/WEB-INF/lib" preservelastmodified="true">
            <fileset dir="${lib}">
                <exclude name="**/servlet-api.jar"/>
                <exclude name="**/jsp-api.jar"/>
                <exclude name="**/jasper-runtime.jar"/>
                <exclude name="**/catalina-ant.jar"/>
            </fileset>
        </copy>

        <!-- Copy all .class files from src tree -->
        <copy todir="${web-root}/WEB-INF/classes" preservelastmodified="true">
            <fileset dir="${classes}"/>
        </copy>

    </target>

    <!-- Deploy directly to server (does not presere unchanged files) -->
    <target name="deploy-hard" depends="compile">

        <!-- Clear old deployment -->
        <delete dir="${webroot}"/>

        <!-- Clean old files in trunk -->
        <antcall target="clean" />

        <!-- Now do a new deploy -->
        <antcall target="deploy" />

    </target>

    <!-- Deploy directly to server (does not presere unchanged files) -->
    <target name="dist" depends="compile">
        <!-- Copy web-folder contents to the deployment folder-->
        <copy todir="dist">
            <fileset dir="web"/>
        </copy>

        <!-- Copy all library files -->
        <copy todir="dist/WEB-INF/lib">
            <fileset dir="${lib}">
                <exclude name="**/servlet-api.jar"/>
                <exclude name="**/jsp-api.jar"/>
                <exclude name="**/jasper-runtime.jar"/>
                <exclude name="**/catalina-ant.jar"/>
            </fileset>
        </copy>

        <!-- Copy all .class files from src tree -->
        <copy todir="dist/WEB-INF/classes">
            <fileset dir="${classes}"/>
        </copy>
    </target>

    <!-- Make WAR file of distribution in dist dir -->
    <target name="war" depends="dist">
        <war destfile="${dist}/${project-name}.war" webxml="${dist}/WEB-INF/web.xml">
            <fileset dir="${dist}"/>
        </war>
    </target>

    <!-- Generate javadoc -->
    <target name="javadoc">
        <delete dir="${javadoc}"/>
        <mkdir dir="${javadoc}"/>
        <javadoc
                destdir="${javadoc}"
                classpathref="classpath"
                packagenames="no.uib.ii.deliverandum"
                >
            <fileset dir="${src}" includes="**/*.java"/>
        </javadoc>
    </target>

</project>
